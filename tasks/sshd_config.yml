---
- name: Configure ssh root login to {{sshrootlogin}}
  lineinfile: dest=/etc/ssh/sshd_config
              regexp='^#*PermitRootLogin.*'
              line='PermitRootLogin {{sshrootlogin}}'
              insertafter='^#*LoginGraceTime'
              state=present
              owner=root
              group=root
              mode=600
  notify: restart sshd

- name: Remove unwanted Port lines from sshd_config
  lineinfile: dest=/etc/ssh/sshd_config
              regexp='^#*Port (?!{{sshmainport}}|{{sshextraport}})'
              state=absent

- name: SSH Listen on Main Port
  lineinfile: dest=/etc/ssh/sshd_config
              insertbefore='^#*AddressFamily'
              line='Port {{sshmainport}}'
              state=present
              owner=root
              group=root
              mode=600
  notify: restart sshd

- name: SSH Listen on Extra Port
  lineinfile: dest=/etc/ssh/sshd_config
              line='Port {{sshextraport}}'
              insertafter='Port {{sshmainport}}'
              state=present
              owner=root
              group=root
              mode=600
  notify: restart sshd
  when: sshextraport != 0

- name: Create login banner
  copy: src=files/login_banner dest=/etc/login_banner owner=root group=root mode=644
  when: setloginbanner == 'yes'

- name: Remove unwanted login banner references
  lineinfile: dest=/etc/ssh/sshd_config
              regexp='^Banner (?!/etc/login_banner)'
              state=absent
  notify: restart sshd
  when: setloginbanner == 'yes'

- name: Remove active login banner references
  lineinfile: dest=/etc/ssh/sshd_config
              regexp='^Banner'
              state=absent
  notify: restart sshd
  when: setloginbanner == 'no'

- name: Configure login banner in ssh
  lineinfile: dest=/etc/ssh/sshd_config
              line='Banner /etc/login_banner'
              insertafter='# no default banner path'
              state=present
              owner=root
              group=root
              mode=600
  notify: restart sshd
  when: setloginbanner == 'yes'

handlers:
  - name: restart sshd
    service: name=sshd state=restarted
